apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reductrai.fullname" . }}-proxy
  labels:
    app.kubernetes.io/name: {{ include "reductrai.name" . }}-proxy
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: proxy
spec:
  replicas: {{ .Values.proxy.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "reductrai.name" . }}-proxy
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "reductrai.name" . }}-proxy
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: proxy
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      containers:
        - name: proxy
          image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}"
          imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: REDUCTRAI_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "reductrai.fullname" . }}-license
                  key: license-key
            - name: REDUCTRAI_COMPRESSION
              value: "{{ .Values.proxy.compression.enabled }}"
            - name: REDUCTRAI_COMPRESSION_LEVEL
              value: "{{ .Values.proxy.compression.level }}"
            {{- if .Values.backends.datadog.enabled }}
            - name: DATADOG_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "reductrai.fullname" . }}-backends
                  key: datadog-api-key
            - name: DATADOG_ENDPOINT
              value: "{{ .Values.backends.datadog.endpoint }}"
            {{- end }}
            {{- if .Values.backends.newrelic.enabled }}
            - name: NEW_RELIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "reductrai.fullname" . }}-backends
                  key: newrelic-api-key
            - name: NEW_RELIC_ENDPOINT
              value: "{{ .Values.backends.newrelic.endpoint }}"
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.proxy.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          {{- if .Values.storage.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "reductrai.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}